name: Release Addon

on:
  push:
    branches: [ main ]
    paths:
      - 'Windower4/**'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Extract version from commit message
      id: version
      run: |
        # Extract version pattern (x.y.z) from commit message
        VERSION=$(echo "${{ github.event.head_commit.message }}" | grep -oE '[0-9]+\.[0-9]+\.[0-9]+' | head -1)
        
        if [ -z "$VERSION" ]; then
          echo "No version found in commit message: ${{ github.event.head_commit.message }}"
          exit 1
        fi
        
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Found version: $VERSION"

    - name: Check if tag already exists
      id: check_tag
      run: |
        if git rev-parse "v${{ steps.version.outputs.version }}" >/dev/null 2>&1; then
          echo "Tag v${{ steps.version.outputs.version }} already exists"
          exit 1
        fi

    - name: Create addon directory structure
      run: |
        mkdir -p addon
        
        # Copy files from Windower4 to addon (excluding README.MD)
        cp Windower4/whereisnm.lua addon/
        cp Windower4/api.lua addon/
        cp Windower4/sha2.lua addon/

    - name: Create zip file
      run: |
        zip -r whereisnm-v${{ steps.version.outputs.version }}.zip addon/

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.version.outputs.version }}
        release_name: WhereIsNM v${{ steps.version.outputs.version }}
        body: |
          Release v${{ steps.version.outputs.version }}
          
          Changes:
          ${{ github.event.head_commit.message }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./whereisnm-v${{ steps.version.outputs.version }}.zip
        asset_name: whereisnm-v${{ steps.version.outputs.version }}.zip
        asset_content_type: application/zip